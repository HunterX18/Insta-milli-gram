[{"D:\\DESKTOP\\insta-clone\\client\\src\\index.js":"1","D:\\DESKTOP\\insta-clone\\client\\src\\reportWebVitals.js":"2","D:\\DESKTOP\\insta-clone\\client\\src\\App.js":"3","D:\\DESKTOP\\insta-clone\\client\\src\\components\\Navbar.js":"4","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Home.js":"5","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\CreatePost.js":"6","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\FollowedPosts.js":"7","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Signin.js":"8","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Profile.js":"9","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\EditProfile.js":"10","D:\\DESKTOP\\insta-clone\\client\\src\\reducers\\userReducer.js":"11","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Signup.js":"12","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\UserProfile.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1980,"mtime":1621774173409,"results":"17","hashOfConfig":"15"},{"size":3748,"mtime":1614325360944,"results":"18","hashOfConfig":"15"},{"size":7366,"mtime":1614521441059,"results":"19","hashOfConfig":"15"},{"size":2676,"mtime":1610805680771,"results":"20","hashOfConfig":"15"},{"size":7764,"mtime":1611588800416,"results":"21","hashOfConfig":"15"},{"size":2260,"mtime":1610982527246,"results":"22","hashOfConfig":"15"},{"size":9191,"mtime":1621774299082,"results":"23","hashOfConfig":"15"},{"size":4809,"mtime":1621774444043,"results":"24","hashOfConfig":"15"},{"size":650,"mtime":1611646800525,"results":"25","hashOfConfig":"15"},{"size":2909,"mtime":1614325125833,"results":"26","hashOfConfig":"15"},{"size":11230,"mtime":1621774376411,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xgew7k",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\DESKTOP\\insta-clone\\client\\src\\index.js",[],["61","62"],"D:\\DESKTOP\\insta-clone\\client\\src\\reportWebVitals.js",[],"D:\\DESKTOP\\insta-clone\\client\\src\\App.js",["63","64"],"D:\\DESKTOP\\insta-clone\\client\\src\\components\\Navbar.js",[],"D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Home.js",["65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n\tconst [data, setData] = useState([]);\r\n\tconst { state, dispatch } = useContext(UserContext);\r\n\tuseEffect(() => {\r\n\t\tfetch(\"/allposts\", {\r\n\t\t\theaders: { Authorization: \"Bearer \" + localStorage.getItem(\"jwt\") },\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\t// console.log(result.posts);\r\n\t\t\t\tsetData(result.posts);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst likePost = (id) => {\r\n\t\tfetch(\"/like\", {\r\n\t\t\tmethod: \"put\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconst newData = data.map((item) => {\r\n\t\t\t\t\tif (item._id == result._id)\r\n\t\t\t\t\t\t// return { ...item, likes: result.likes, comments: result.comments };\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\telse return item;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\tconst unlikePost = (id) => {\r\n\t\tfetch(\"/unlike\", {\r\n\t\t\tmethod: \"put\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId: id,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconst newData = data.map((item) => {\r\n\t\t\t\t\tif (item._id == result._id)\r\n\t\t\t\t\t\t// return { ...item, likes: result.likes, comments: result.comments };\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\telse return item;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tconst makeComment = (text, postId) => {\r\n\t\tfetch(\"/comment\", {\r\n\t\t\tmethod: \"put\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tpostId,\r\n\t\t\t\ttext,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconst newData = data.map((item) => {\r\n\t\t\t\t\tif (item._id == result._id)\r\n\t\t\t\t\t\t// return { ...item, likes: result.likes, comments: result.comments };\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\telse return item;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t\t// console.log(result);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tconst deletePost = (postid) => {\r\n\t\tfetch(`/deletepost/${postid}`, {\r\n\t\t\tmethod: \"delete\",\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\t// console.log(result);\r\n\t\t\t\tconst newData = data.filter((item) => {\r\n\t\t\t\t\treturn item._id != result._id;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tconst deleteComment = (postid, commentid) => {\r\n\t\tfetch(`/deletecomment/${postid}/${commentid}`, {\r\n\t\t\tmethod: \"delete\",\r\n\t\t\theaders: {\r\n\t\t\t\tAuthorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n\t\t\t},\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((result) => {\r\n\t\t\t\tconst newData = data.map((item) => {\r\n\t\t\t\t\tif (item._id == result._id)\r\n\t\t\t\t\t\t// return { ...item, likes: result.likes, comments: result.comments };\r\n\t\t\t\t\t\treturn result;\r\n\t\t\t\t\telse return item;\r\n\t\t\t\t});\r\n\t\t\t\tsetData(newData);\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"home\">\r\n\t\t\t{data.map((item) => {\r\n\t\t\t\t// console.log(item);\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div className=\"card home-card\" key={item._id}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tsrc={item.postedBy.pic}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: \"40px\",\r\n\t\t\t\t\t\t\t\theight:\"40px\",\r\n\t\t\t\t\t\t\t\tborderRadius: \"50%\",\r\n\t\t\t\t\t\t\t\tfloat: \"left\",\r\n\t\t\t\t\t\t\t\tmargin: \"5px\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t<h5 style={{ padding: \"6px\" }}>\r\n\t\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\t\tto={\r\n\t\t\t\t\t\t\t\t\titem.postedBy._id !== state._id\r\n\t\t\t\t\t\t\t\t\t\t? \"Profile/\" + item.postedBy._id\r\n\t\t\t\t\t\t\t\t\t\t: \"Profile/\" + state._id\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{item.postedBy.name}\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t{item.postedBy._id == state._id && (\r\n\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={() => deletePost(item._id)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</h5>\r\n\t\t\t\t\t\t<div className=\"card-image\">\r\n\t\t\t\t\t\t\t<img src={item.photo} alt=\"image\" />\r\n\t\t\t\t\t\t\t<div className=\"card-content\">\r\n\t\t\t\t\t\t\t\t<h6>{item.title}</h6>\r\n\t\t\t\t\t\t\t\t<p>{item.body}</p>\r\n\t\t\t\t\t\t\t\t{item.likes.includes(state._id) ? (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"likes\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"-5px\",\r\n\t\t\t\t\t\t\t\t\t\t\t// background:\"grey\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"left\",\r\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tunlikePost(item._id);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tthumb_down\r\n\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: \"20px\", marginRight: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t<h6>{item.comments.length} comments</h6>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"likes\"\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\tmarginLeft: \"-5px\",\r\n\t\t\t\t\t\t\t\t\t\t\t// background:\"grey\",\r\n\t\t\t\t\t\t\t\t\t\t\twidth: \"100%\",\r\n\t\t\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\t\t\tjustifyContent: \"left\",\r\n\t\t\t\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tlikePost(item._id);\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tthumb_up\r\n\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t<h6>{item.likes.length} likes</h6>\r\n\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: \"20px\", marginRight: \"10px\" }}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tmessage\r\n\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t<h6>{item.comments.length} comments</h6>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t{item.comments.map((record) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<h6 key={record._id}>\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{ display: \"flex\", marginBottom: \"5px\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsrc={record.postedBy.pic}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth: \"20px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tborderRadius: \"50%\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmarginRight: \"5px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t></img>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span style={{ fontWeight: \"500\", fontSize: \"large\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{record.postedBy.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t{record.text}\r\n\t\t\t\t\t\t\t\t\t\t\t{(item.postedBy._id == state._id ||\r\n\t\t\t\t\t\t\t\t\t\t\t\trecord.postedBy._id == state._id) && (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<i\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"material-icons\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ float: \"right\" }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeleteComment(item._id, record._id);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdelete\r\n\t\t\t\t\t\t\t\t\t\t\t\t</i>\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</h6>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\tonSubmit={(e) => {\r\n\t\t\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\t\t\tmakeComment(e.target[0].value, item._id);\r\n\t\t\t\t\t\t\t\t\t\te.target[0].value = \"\";\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<input type=\"text\" placeholder=\"add a comment\" />\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Home;\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\CreatePost.js",["77"],"import React, { useState, useEffect } from \"react\";\r\nimport M from \"materialize-css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst CreatePost = () => {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.error)\r\n            M.toast({ html: data.error, classes: \"#b71c1c red darken-4\" });\r\n          else {\r\n            M.toast({\r\n              html: \"post created successfully\",\r\n              classes: \"#43a047 green darken-1\",\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n  }, [url]);\r\n\r\n  const postDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"insta-clone\");\r\n    data.append(\"cloud_name\", \"instahunterx\");\r\n    fetch(\"https://api.cloudinary.com/v1_1/instahunterx/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => setUrl(data.url))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"card auth-card input-field\"\r\n      style={{\r\n        margin: \"30px auto\",\r\n        maxWidth: \"500px\",\r\n        padding: \"20px\",\r\n      }}\r\n    >\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n      />\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn #1e88e5 blue darken-1\">\r\n          <span>Upload Image</span>\r\n          <input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button\r\n        className=\"btn waves-effect waves-light #1e88e5 blue darken-1\"\r\n        onClick={postDetails}\r\n      >\r\n        Submit Post\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\FollowedPosts.js",["78","79","80","81","82","83","84","85","86","87"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(UserContext);\r\n  useEffect(() => {\r\n    fetch(\"/getfollowedposts\", {\r\n      headers: { Authorization: \"Bearer \" + localStorage.getItem(\"jwt\") },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id)\r\n            // return { ...item, likes: result.likes, comments: result.comments };\r\n            return result;\r\n          else return item;\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id)\r\n            // return { ...item, likes: result.likes, comments: result.comments };\r\n            return result;\r\n          else return item;\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId,\r\n        text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id)\r\n            // return { ...item, likes: result.likes, comments: result.comments };\r\n            return result;\r\n          else return item;\r\n        });\r\n        setData(newData);\r\n        // console.log(result);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id != result._id;\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const deleteComment = (postid, commentid) => {\r\n    fetch(`/deletecomment/${postid}/${commentid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id)\r\n            // return { ...item, likes: result.likes, comments: result.comments };\r\n            return result;\r\n          else return item;\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((item) => {\r\n        return (\r\n          <div className=\"card home-card\" key={item._id}>\r\n            <h5 style={{padding:\"6px\"}}>\r\n              <Link\r\n                to={\r\n                  item.postedBy._id !== state._id\r\n                    ? \"Profile/\" + item.postedBy._id\r\n                    : \"Profile/\" + state._id\r\n                }\r\n              >\r\n                {item.postedBy.name}\r\n              </Link>\r\n              {item.postedBy._id == state._id && (\r\n                <i\r\n                  className=\"material-icons\"\r\n                  style={{ float: \"right\" }}\r\n                  onClick={() => deletePost(item._id)}\r\n                >\r\n                  delete\r\n                </i>\r\n              )}\r\n            </h5>\r\n            <div className=\"card-image\">\r\n              <img src={item.photo} alt=\"image\" />\r\n              <div className=\"card-content\">\r\n                {item.likes.includes(state._id) ? (\r\n                  <div\r\n                    className=\"likes\"\r\n                    style={{\r\n                      marginLeft: \"-20px\",\r\n                      // background:\"grey\",\r\n                      width: \"100px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-evenly\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      onClick={() => {\r\n                        unlikePost(item._id);\r\n                      }}\r\n                    >\r\n                      thumb_down\r\n                    </i>\r\n                    <h6>{item.likes.length} likes</h6>\r\n                  </div>\r\n                ) : (\r\n                  <div\r\n                    className=\"likes\"\r\n                    style={{\r\n                      marginLeft: \"-20px\",\r\n                      // background:\"grey\",\r\n                      width: \"100px\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-evenly\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <i\r\n                      className=\"material-icons\"\r\n                      onClick={() => {\r\n                        likePost(item._id);\r\n                      }}\r\n                    >\r\n                      thumb_up\r\n                    </i>\r\n                    <h6>{item.likes.length} likes</h6>\r\n                  </div>\r\n                )}\r\n\r\n                <h6>{item.title}</h6>\r\n                <p>{item.body}</p>\r\n                {item.comments.map((record) => {\r\n                  return (\r\n                    <h6 key={record._id}>\r\n                      <span style={{ fontWeight: \"500\", fontSize: \"large\" }}>\r\n                        {record.postedBy.name}\r\n                      </span>\r\n                      <br />\r\n                      {record.text}\r\n                      {(item.postedBy._id == state._id ||\r\n                        record.postedBy._id == state._id) && (\r\n                        <i\r\n                          className=\"material-icons\"\r\n                          style={{ float: \"right\" }}\r\n                          onClick={() => {\r\n                            deleteComment(item._id, record._id);\r\n                          }}\r\n                        >\r\n                          delete\r\n                        </i>\r\n                      )}\r\n                    </h6>\r\n                  );\r\n                })}\r\n                <form\r\n                  onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    makeComment(e.target[0].value, item._id);\r\n                    e.target[0].value = \"\";\r\n                  }}\r\n                >\r\n                  <input type=\"text\" placeholder=\"add a comment\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Signin.js",["88"],"import React, { useState, useContext } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signin = () => {\r\n  const { state, dispatch } = useContext(UserContext);\r\n  const history = useHistory();\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  // const filter = /^([w-]+(?:.[w-]+)*)@((?:[w-]+.)*w[w-]{0,66}).([com net org]{3}(?:.[a-z]{6})?)$/i;\r\n  const PostData = () => {\r\n    // if (!filter.test(email)) {\r\n    //   M.toast({ html: \"Enter valid email\", classes: \"#b71c1c red darken-4\" });\r\n    //   return;\r\n    // }\r\n    fetch(\"/Signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.error)\r\n          M.toast({ html: data.error, classes: \"#b71c1c red darken-4\" });\r\n        else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          dispatch({ type: \"USER\", payload: data.user });\r\n          M.toast({\r\n            html: \"successfully signed in\",\r\n            classes: \"#43a047 green darken-1\",\r\n          });\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <div className=\"mycard\">\r\n      <div className=\"card auth-card input-field\">\r\n        <h2>IIIT BBSR</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <button\r\n          className=\"btn waves-effect waves-light #1e88e5 blue darken-1\"\r\n          onClick={PostData}\r\n        >\r\n          Signin\r\n        </button>\r\n        <h5>\r\n          <Link to=\"/Signup\">Don't have an account?</Link>\r\n        </h5>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Profile.js",["89","90","91","92","93","94","95","96","97","98","99","100","101","102","103"],"D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\EditProfile.js",["104"],"D:\\DESKTOP\\insta-clone\\client\\src\\reducers\\userReducer.js",["105","106","107","108","109"],"export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if (action.type == \"USER\") return action.payload;\r\n  if (action.type == \"CLEAR\") return null;\r\n  if (action.type == \"UPDATE\")\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following,\r\n    };\r\n  if (action.type == \"UPDATEPIC\")\r\n    return {\r\n      ...state,\r\n      pic: action.payload,\r\n    };\r\n  if (action.type == \"UPDATEPROFILE\")\r\n    return {\r\n      ...state,\r\n      name: action.payload.name,\r\n      email: action.payload.email,\r\n      password: action.payload.password,\r\n    }\r\n  return state;\r\n};\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\Signup.js",["110"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nconst Signup = () => {\r\n\tconst [name, setName] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [image, setImage] = useState(\"\");\r\n\tconst [url, setUrl] = useState(undefined);\r\n\tconst history = useHistory();\r\n\t// const filter = /^([w-]+(?:.[w-]+)*)@((?:[w-]+.)*w[w-]{0,66}).([com net org]{3}(?:.[a-z]{6})?)$/i;\r\n\tuseEffect(() => {\r\n\t\tif (url) uploadFields();\r\n\t}, [url]);\r\n\r\n\tconst uploadPic = () => {\r\n\t\tconst data = new FormData();\r\n\t\tdata.append(\"file\", image);\r\n\t\tdata.append(\"upload_preset\", \"insta-clone\");\r\n\t\tdata.append(\"cloud_name\", \"instahunterx\");\r\n\t\tfetch(\"https://api.cloudinary.com/v1_1/instahunterx/image/upload\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\tbody: data,\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => setUrl(data.url))\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tconst uploadFields = () => {\r\n\t\tfetch(\"/Signup\", {\r\n\t\t\tmethod: \"post\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify({\r\n\t\t\t\tname,\r\n\t\t\t\temail,\r\n\t\t\t\tpassword,\r\n\t\t\t\tpic: url,\r\n\t\t\t}),\r\n\t\t})\r\n\t\t\t.then((res) => res.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tif (data.error)\r\n\t\t\t\t\tM.toast({ html: data.error, classes: \"#b71c1c red darken-4\" });\r\n\t\t\t\telse {\r\n\t\t\t\t\tM.toast({ html: data.message, classes: \"#43a047 green darken-1\" });\r\n\t\t\t\t\thistory.push(\"/Signin\");\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => console.log(err));\r\n\t};\r\n\r\n\tconst PostData = () => {\r\n\t\t// if (!filter.test(email)) {\r\n\t\t//   M.toast({ html: \"Enter valid email\", classes: \"#b71c1c red darken-4\" });\r\n\t\t//   return;\r\n\t\t// }\r\n\t\tif (image) uploadPic();\r\n\t\telse uploadFields();\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"mycard\">\r\n\t\t\t<div className=\"card auth-card input-field\">\r\n\t\t\t\t<h2>IIIT BBSR</h2>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Name\"\r\n\t\t\t\t\tvalue={name}\r\n\t\t\t\t\tonChange={(e) => setName(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"email\"\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder=\"password\"\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t/>\r\n\t\t\t\t<div className=\"file-field input-field\">\r\n\t\t\t\t\t<div className=\"btn #1e88e5 blue darken-1\">\r\n\t\t\t\t\t\t<span>Upload Pic</span>\r\n\t\t\t\t\t\t<input type=\"file\" onChange={(e) => setImage(e.target.files[0])} />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"file-path-wrapper\">\r\n\t\t\t\t\t\t<input className=\"file-path validate\" type=\"text\" />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn waves-effect waves-light #1e88e5 blue darken-1\"\r\n\t\t\t\t\tonClick={PostData}\r\n\t\t\t\t>\r\n\t\t\t\t\tSignUP\r\n\t\t\t\t</button>\r\n\t\t\t\t<h5>\r\n\t\t\t\t\t<Link to=\"/Signin\">Already have an account?</Link>\r\n\t\t\t\t</h5>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Signup;\r\n","D:\\DESKTOP\\insta-clone\\client\\src\\components\\screens\\UserProfile.js",["111","112","113","114","115","116","117","118","119","120","121","122","123","124","125"],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":19,"column":11,"nodeType":"132","messageId":"133","endLine":19,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":25,"column":6,"nodeType":"136","endLine":25,"endColumn":8,"suggestions":"137"},{"ruleId":"130","severity":1,"message":"138","line":7,"column":17,"nodeType":"132","messageId":"133","endLine":7,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":33,"column":19,"nodeType":"141","messageId":"142","endLine":33,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":56,"column":19,"nodeType":"141","messageId":"142","endLine":56,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":81,"column":19,"nodeType":"141","messageId":"142","endLine":81,"endColumn":21},{"ruleId":"139","severity":1,"message":"143","line":103,"column":22,"nodeType":"141","messageId":"142","endLine":103,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":120,"column":19,"nodeType":"141","messageId":"142","endLine":120,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":136,"column":7,"nodeType":"146","endLine":145,"endColumn":8},{"ruleId":"139","severity":1,"message":"140","line":156,"column":27,"nodeType":"141","messageId":"142","endLine":156,"endColumn":29},{"ruleId":"147","severity":1,"message":"148","line":167,"column":8,"nodeType":"146","endLine":167,"endColumn":44},{"ruleId":"144","severity":1,"message":"145","line":236,"column":13,"nodeType":"146","endLine":243,"endColumn":14},{"ruleId":"139","severity":1,"message":"140","line":249,"column":32,"nodeType":"141","messageId":"142","endLine":249,"endColumn":34},{"ruleId":"139","severity":1,"message":"140","line":250,"column":33,"nodeType":"141","messageId":"142","endLine":250,"endColumn":35},{"ruleId":"134","severity":1,"message":"149","line":39,"column":6,"nodeType":"136","endLine":39,"endColumn":11,"suggestions":"150"},{"ruleId":"130","severity":1,"message":"138","line":7,"column":18,"nodeType":"132","messageId":"133","endLine":7,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":33,"column":24,"nodeType":"141","messageId":"142","endLine":33,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":56,"column":24,"nodeType":"141","messageId":"142","endLine":56,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":81,"column":24,"nodeType":"141","messageId":"142","endLine":81,"endColumn":26},{"ruleId":"139","severity":1,"message":"143","line":103,"column":27,"nodeType":"141","messageId":"142","endLine":103,"endColumn":29},{"ruleId":"139","severity":1,"message":"140","line":120,"column":24,"nodeType":"141","messageId":"142","endLine":120,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":145,"column":34,"nodeType":"141","messageId":"142","endLine":145,"endColumn":36},{"ruleId":"147","severity":1,"message":"148","line":156,"column":15,"nodeType":"146","endLine":156,"endColumn":51},{"ruleId":"139","severity":1,"message":"140","line":214,"column":43,"nodeType":"141","messageId":"142","endLine":214,"endColumn":45},{"ruleId":"139","severity":1,"message":"140","line":215,"column":45,"nodeType":"141","messageId":"142","endLine":215,"endColumn":47},{"ruleId":"130","severity":1,"message":"131","line":7,"column":11,"nodeType":"132","messageId":"133","endLine":7,"endColumn":16},{"ruleId":"130","severity":1,"message":"138","line":6,"column":17,"nodeType":"132","messageId":"133","endLine":6,"endColumn":25},{"ruleId":"130","severity":1,"message":"151","line":7,"column":9,"nodeType":"132","messageId":"133","endLine":7,"endColumn":14},{"ruleId":"130","severity":1,"message":"152","line":7,"column":16,"nodeType":"132","messageId":"133","endLine":7,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":32,"column":19,"nodeType":"141","messageId":"142","endLine":32,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":55,"column":19,"nodeType":"141","messageId":"142","endLine":55,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":80,"column":19,"nodeType":"141","messageId":"142","endLine":80,"endColumn":21},{"ruleId":"139","severity":1,"message":"143","line":102,"column":22,"nodeType":"141","messageId":"142","endLine":102,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":119,"column":19,"nodeType":"141","messageId":"142","endLine":119,"endColumn":21},{"ruleId":"144","severity":1,"message":"145","line":155,"column":7,"nodeType":"146","endLine":163,"endColumn":9},{"ruleId":"144","severity":1,"message":"145","line":195,"column":8,"nodeType":"146","endLine":204,"endColumn":9},{"ruleId":"139","severity":1,"message":"140","line":215,"column":28,"nodeType":"141","messageId":"142","endLine":215,"endColumn":30},{"ruleId":"147","severity":1,"message":"148","line":226,"column":9,"nodeType":"146","endLine":226,"endColumn":45},{"ruleId":"144","severity":1,"message":"145","line":296,"column":14,"nodeType":"146","endLine":303,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":311,"column":33,"nodeType":"141","messageId":"142","endLine":311,"endColumn":35},{"ruleId":"139","severity":1,"message":"140","line":312,"column":34,"nodeType":"141","messageId":"142","endLine":312,"endColumn":36},{"ruleId":"134","severity":1,"message":"153","line":88,"column":6,"nodeType":"136","endLine":88,"endColumn":13,"suggestions":"154"},{"ruleId":"139","severity":1,"message":"140","line":4,"column":19,"nodeType":"141","messageId":"142","endLine":4,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":5,"column":19,"nodeType":"141","messageId":"142","endLine":5,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":6,"column":19,"nodeType":"141","messageId":"142","endLine":6,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":12,"column":19,"nodeType":"141","messageId":"142","endLine":12,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":17,"column":19,"nodeType":"141","messageId":"142","endLine":17,"endColumn":21},{"ruleId":"134","severity":1,"message":"155","line":15,"column":5,"nodeType":"136","endLine":15,"endColumn":10,"suggestions":"156"},{"ruleId":"134","severity":1,"message":"157","line":23,"column":5,"nodeType":"136","endLine":23,"endColumn":7,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"157","line":36,"column":5,"nodeType":"136","endLine":36,"endColumn":7,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"140","line":52,"column":19,"nodeType":"141","messageId":"142","endLine":52,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":74,"column":19,"nodeType":"141","messageId":"142","endLine":74,"endColumn":21},{"ruleId":"139","severity":1,"message":"140","line":98,"column":19,"nodeType":"141","messageId":"142","endLine":98,"endColumn":21},{"ruleId":"139","severity":1,"message":"143","line":117,"column":22,"nodeType":"141","messageId":"142","endLine":117,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":134,"column":19,"nodeType":"141","messageId":"142","endLine":134,"endColumn":21},{"ruleId":"139","severity":1,"message":"143","line":201,"column":22,"nodeType":"141","messageId":"142","endLine":201,"endColumn":24},{"ruleId":"144","severity":1,"message":"145","line":229,"column":8,"nodeType":"146","endLine":237,"endColumn":10},{"ruleId":"144","severity":1,"message":"145","line":276,"column":10,"nodeType":"146","endLine":285,"endColumn":11},{"ruleId":"139","severity":1,"message":"140","line":296,"column":30,"nodeType":"141","messageId":"142","endLine":296,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":307,"column":11,"nodeType":"146","endLine":307,"endColumn":47},{"ruleId":"144","severity":1,"message":"145","line":380,"column":16,"nodeType":"146","endLine":387,"endColumn":17},{"ruleId":"139","severity":1,"message":"140","line":395,"column":35,"nodeType":"141","messageId":"142","endLine":395,"endColumn":37},{"ruleId":"139","severity":1,"message":"140","line":396,"column":36,"nodeType":"141","messageId":"142","endLine":396,"endColumn":38},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["162"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["163"],"'image' is assigned a value but never used.","'setImage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["164"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["165"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"176","fix":"178"},"Update the dependencies array to be: [dispatch, history]",{"range":"179","text":"180"},"Update the dependencies array to be: [body, history, title, url]",{"range":"181","text":"182"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"183","text":"184"},"Update the dependencies array to be: [uploadFields, url]",{"range":"185","text":"186"},"Update the dependencies array to be: [userid]",{"range":"187","text":"188"},{"range":"189","text":"188"},[1088,1090],"[dispatch, history]",[1151,1156],"[body, history, title, url]",[2723,2730],"[dispatch, image, state]",[571,576],"[uploadFields, url]",[731,733],"[userid]",[1010,1012]]